curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR328/004/ERR3284704/ERR3284704.fastq.gz -o ERR3284704_GridION_sequencing.fastq.gz
import argparse
import os
#part of the argparse code. obviously requires argpviarse
import sys
#requires sys
#function to parse command line arguments
import glob
def check_arg(args=None):
        parser = argparse.ArgumentParser(description='Reading in a Fasta File and Translating')
        parser.add_argument('-i', '--input', help='path to input files', required='True')
        parser.add_argument('-o', '--output', help='output file names', required='True')
        return parser.parse_args(args)
args = check_arg(sys.argv[1:])
infile = args.input
outfile = args.output
x=glob.glob(infile+"*"+".fastq")
print(x)
list_of_fastq_prefixes=set()
for i in x:
        p=i[len(infile):i.find('.fastq')]
        list_of_fastq_prefixes.add(p)
print(list_of_fastq_prefixes)

for i in list_of_fastq_prefixes:
        command= 'minimap2 -x ava-ont '+infile+i+'.fastq '+infile+i+'.fastq | gzip -1 > '+infile+i+'_minimap.paf.gz'
        #os.system(command)
        print(command)
for i in list_of_fastq_prefixes:
        command= 'miniasm -f '+infile+i+'.fastq '+infile+i+'_minimap.paf.gz > '+infile+i+'_miniasm.gfa'
        print(command)
        #os.system(command)
basic_path = os.getcwd()
for i in list_of_fastq_prefixes:
        command='mkdir '+ basic_path + '/sub/'+i
        print(command)
        #os.system(command)
import subprocess
import random
import os
for i in list_of_fastq_prefixes:
        file1= infile+i+'.fastq'
        result = subprocess.run(['wc', '-l', file1], capture_output=True, text=True)
        print(result)
        line_count = int(result.stdout.split()[0])
        number_reads = line_count // 4
        random.seed(1)
        randomList=random.sample(range(0,number_reads),10)

        counter=1
        for s in randomList:
                command='seqtk sample -s'+str(s)+' '+file1+' 150000 > '+ basic_path+'/sub/'+str(i)+'/'+str(counter)+''
                print(command)
                os.system(command)
                command= 'minimap2 -x ava-ont '+basic_path+'/sub/'+str(i)+'/'+str(counter)+' '+basic_path+'/sub/'+str(i)+'/'+str(counter)+' | gzip -1 > '+basic_path+'/sub/'+str(i)+'/'+str(counter)+'_minimap.paf.gz'
                counter+=1
                print(command)
                #os.system(command)
                command= 'miniasm -f '+basic_path+'/sub/'+str(i)+'/'+str(counter)+' '+basic_path+'/sub/'+str(i)+'/'+str(counter)+'_minimap.paf.gz > '+basic_path+'/sub/'+str(i)+'/'+str(counter)+'_miniasm.gfa'
                print(command)
                os.system(command)
